{"ast":null,"code":"import { CART_ITEMS, GET_RESTAURANTS, SELECT_RESTAURANT } from './actionTypes';\nconst initState = {\n  isLoading: false,\n  restaurantData: [],\n  restaurantItems: [],\n  cartItems: [],\n  isError: false,\n  restaurantName: '',\n  restaurantId: '',\n  cartRestaurant: '',\n  cartRestaurantId: ''\n};\n\nconst reducer = (state = initState, {\n  type,\n  payload\n}) => {\n  // console.log(type, payload);\n  switch (type) {\n    case GET_RESTAURANTS.REQUEST:\n      {\n        return { ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n\n    case GET_RESTAURANTS.SUCCESS:\n      {\n        return { ...state,\n          restaurantData: payload,\n          isLoading: false\n        };\n      }\n\n    case GET_RESTAURANTS.FAILURE:\n      {\n        return { ...state,\n          isError: true,\n          isLoading: false\n        };\n      }\n\n    case SELECT_RESTAURANT:\n      {\n        let seletedRestaurant = state.restaurantData.filter(item => item._id === payload._id)[0];\n        return { ...state,\n          restaurantId: seletedRestaurant._id,\n          restaurantName: seletedRestaurant.restaurentName,\n          restaurantItems: seletedRestaurant.foodItems\n        };\n      }\n\n    case CART_ITEMS.ADD:\n      {\n        let addedItems = state.cartItems.find(item => item._id === payload._id);\n        let restaurantItem = state.restaurantItems.find(item => item._id === payload._id);\n\n        if (addedItems && restaurantItem) {\n          addedItems.quantity += 1;\n          return { ...state,\n            cartItems: state.cartItems,\n            restaurantItems: state.restaurantItems\n          };\n        } else {\n          payload.quantity = 1;\n          restaurantItem.quantity = 1;\n          return { ...state,\n            cartItems: [...state.cartItems, payload],\n            restaurantItems: state.restaurantItems\n          };\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/madhu/Documents/DoneGo/Client/src/Redux/Restaurant/reducer.js"],"names":["CART_ITEMS","GET_RESTAURANTS","SELECT_RESTAURANT","initState","isLoading","restaurantData","restaurantItems","cartItems","isError","restaurantName","restaurantId","cartRestaurant","cartRestaurantId","reducer","state","type","payload","REQUEST","SUCCESS","FAILURE","seletedRestaurant","filter","item","_id","restaurentName","foodItems","ADD","addedItems","find","restaurantItem","quantity"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,eAArB,EAAsCC,iBAAtC,QAA+D,eAA/D;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,KADK;AAEhBC,EAAAA,cAAc,EAAE,EAFA;AAGhBC,EAAAA,eAAe,EAAE,EAHD;AAIhBC,EAAAA,SAAS,EAAE,EAJK;AAKhBC,EAAAA,OAAO,EAAE,KALO;AAMhBC,EAAAA,cAAc,EAAE,EANA;AAOhBC,EAAAA,YAAY,EAAE,EAPE;AAQhBC,EAAAA,cAAc,EAAC,EARC;AAShBC,EAAAA,gBAAgB,EAAC;AATD,CAAlB;;AAaA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGX,SAAT,EAAoB;AAAEY,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApB,KAA0C;AACxD;AACA,UAAQD,IAAR;AACE,SAAKd,eAAe,CAACgB,OAArB;AAA6B;AAC3B,eAAO,EACL,GAAGH,KADE;AAELV,UAAAA,SAAS,EAAE,IAFN;AAGLI,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED,SAAKP,eAAe,CAACiB,OAArB;AAA6B;AAC3B,eAAO,EACL,GAAGJ,KADE;AAELT,UAAAA,cAAc,EAAEW,OAFX;AAGLZ,UAAAA,SAAS,EAAE;AAHN,SAAP;AAKD;;AAED,SAAKH,eAAe,CAACkB,OAArB;AAA6B;AAC3B,eAAO,EACL,GAAGL,KADE;AAELN,UAAAA,OAAO,EAAE,IAFJ;AAGLJ,UAAAA,SAAS,EAAE;AAHN,SAAP;AAKD;;AAED,SAAKF,iBAAL;AAAwB;AACtB,YAAIkB,iBAAiB,GAAGN,KAAK,CAACT,cAAN,CAAqBgB,MAArB,CAA4BC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaP,OAAO,CAACO,GAAzD,EAA8D,CAA9D,CAAxB;AACA,eAAM,EACJ,GAAGT,KADC;AAEJJ,UAAAA,YAAY,EAAEU,iBAAiB,CAACG,GAF5B;AAGJd,UAAAA,cAAc,EAAEW,iBAAiB,CAACI,cAH9B;AAIJlB,UAAAA,eAAe,EAAEc,iBAAiB,CAACK;AAJ/B,SAAN;AAMD;;AAED,SAAKzB,UAAU,CAAC0B,GAAhB;AAAqB;AACjB,YAAIC,UAAU,GAAGb,KAAK,CAACP,SAAN,CAAgBqB,IAAhB,CAAqBN,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaP,OAAO,CAACO,GAAlD,CAAjB;AACA,YAAIM,cAAc,GAAGf,KAAK,CAACR,eAAN,CAAsBsB,IAAtB,CAA2BN,IAAI,IAAGA,IAAI,CAACC,GAAL,KAAaP,OAAO,CAACO,GAAvD,CAArB;;AAEA,YAAGI,UAAU,IAAIE,cAAjB,EAAgC;AAC9BF,UAAAA,UAAU,CAACG,QAAX,IAAuB,CAAvB;AACA,iBAAO,EACL,GAAGhB,KADE;AAELP,YAAAA,SAAS,EAAEO,KAAK,CAACP,SAFZ;AAGLD,YAAAA,eAAe,EAAEQ,KAAK,CAACR;AAHlB,WAAP;AAKD,SAPD,MAQI;AACFU,UAAAA,OAAO,CAACc,QAAR,GAAmB,CAAnB;AACAD,UAAAA,cAAc,CAACC,QAAf,GAA0B,CAA1B;AACA,iBAAO,EACL,GAAGhB,KADE;AAELP,YAAAA,SAAS,EAAE,CAAC,GAAGO,KAAK,CAACP,SAAV,EAAqBS,OAArB,CAFN;AAGLV,YAAAA,eAAe,EAAEQ,KAAK,CAACR;AAHlB,WAAP;AAKD;AACJ;;AACD;AACE,aAAOQ,KAAP;AA1DJ;AA4DD,CA9DD;;AAgEA,eAAeD,OAAf","sourcesContent":["import { CART_ITEMS, GET_RESTAURANTS, SELECT_RESTAURANT } from './actionTypes'\n\nconst initState = {\n  isLoading: false,\n  restaurantData: [],\n  restaurantItems: [],\n  cartItems: [],\n  isError: false,\n  restaurantName: '',\n  restaurantId: '',\n  cartRestaurant:'',\n  cartRestaurantId:'',\n}\n\n\nconst reducer = (state = initState, { type, payload }) => {\n  // console.log(type, payload);\n  switch (type) {\n    case GET_RESTAURANTS.REQUEST:{\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    }\n\n    case GET_RESTAURANTS.SUCCESS:{\n      return {\n        ...state,\n        restaurantData: payload,\n        isLoading: false\n      };\n    }\n\n    case GET_RESTAURANTS.FAILURE:{\n      return {\n        ...state,\n        isError: true,\n        isLoading: false\n      };\n    }\n\n    case SELECT_RESTAURANT: {\n      let seletedRestaurant = state.restaurantData.filter(item => item._id === payload._id)[0]\n      return{\n        ...state,\n        restaurantId: seletedRestaurant._id,\n        restaurantName: seletedRestaurant.restaurentName,\n        restaurantItems: seletedRestaurant.foodItems\n      }\n    }\n\n    case CART_ITEMS.ADD: {\n        let addedItems = state.cartItems.find(item => item._id === payload._id)\n        let restaurantItem = state.restaurantItems.find(item=> item._id === payload._id)\n\n        if(addedItems && restaurantItem){\n          addedItems.quantity += 1\n          return {\n            ...state,\n            cartItems: state.cartItems,\n            restaurantItems: state.restaurantItems\n          }\n        }\n        else{\n          payload.quantity = 1\n          restaurantItem.quantity = 1\n          return {\n            ...state,\n            cartItems: [...state.cartItems, payload],\n            restaurantItems: state.restaurantItems\n          }\n        }\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}