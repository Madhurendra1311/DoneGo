{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/madhu/Documents/DoneGo/Client/src/Components/InputBox.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nconst Minput = styled.input`\n    width: 49px;\n    height:48px;\n   \n    margin: 10px;\n    text-align: center;\n    font-size:20px;  \n`;\n_c = Minput;\nexport default class InputBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = (e, i) => {\n      this.value[i] = e.target.value;\n      this.props.operation(this.value.join(\"\"), this.props.boxes);\n\n      if (i + 1 < this.value.length && e.target.value !== \"\") {\n        this.elements[i + 1].focus();\n      }\n    };\n\n    this.deleteInput = (e, i) => {\n      const key = e.key;\n\n      if (key === \"Backspace\" && i - 1 >= 0 && this.value[i] === \"\") {\n        this.value[i] = e.target.value;\n        this.props.operation(this.value.join(\"\"), this.props.boxes);\n        this.elements[i - 1].focus();\n      }\n    };\n\n    this.handlePaste = e => {\n      const pasted = e.clipboardData.getData(\"Text\").split(\"\");\n      const req = pasted.slice(0, this.props.boxes);\n\n      for (let i = 0; i < req.length; i++) {\n        this.value[i] = req[i];\n      }\n\n      this.props.operation(this.value.join(\"\"), this.props.boxes);\n    };\n\n    this.value = new Array(this.props.boxes).fill(\"\");\n    this.elements = [];\n    this.condition = false;\n  }\n\n  componentDidMount() {\n    this.elements[0].focus();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.value.map((item, index) => /*#__PURE__*/_jsxDEV(Minput, {\n        maxLength: \"1\",\n        onPaste: this.handlePaste,\n        ref: elem => this.elements[index] = elem,\n        onChange: e => this.handleInput(e, index),\n        onKeyDown: e => this.deleteInput(e, index),\n        value: this.value[index]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nInputBox.propTypes = {\n  boxes: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Minput\");","map":{"version":3,"sources":["/home/madhu/Documents/DoneGo/Client/src/Components/InputBox.jsx"],"names":["React","PropTypes","styled","Minput","input","InputBox","Component","constructor","props","handleInput","e","i","value","target","operation","join","boxes","length","elements","focus","deleteInput","key","handlePaste","pasted","clipboardData","getData","split","req","slice","Array","fill","condition","componentDidMount","render","map","item","index","elem","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Minput = styled.input`\n    width: 49px;\n    height:48px;\n   \n    margin: 10px;\n    text-align: center;\n    font-size:20px;  \n`\n\nexport default class InputBox extends React.Component {\n    constructor(props) {\n        super(props)\n        this.value = new Array(this.props.boxes).fill(\"\")\n        this.elements = []\n        this.condition = false\n    }\n\n    handleInput = (e, i) => {\n        this.value[i] = e.target.value\n        this.props.operation(this.value.join(\"\"), this.props.boxes)\n        if ((i + 1) < this.value.length && e.target.value !== \"\") {\n            this.elements[i + 1].focus()\n        }\n    }\n\n    deleteInput = (e, i) => {\n        const key = e.key;\n        if (key === \"Backspace\" && (i - 1) >= 0 && this.value[i] === \"\") {\n            this.value[i] = e.target.value\n            this.props.operation(this.value.join(\"\"), this.props.boxes)\n            this.elements[i - 1].focus()\n\n        }\n    }\n\n    handlePaste = (e) => {\n        const pasted = e.clipboardData.getData(\"Text\").split(\"\")\n        const req = pasted.slice(0, this.props.boxes)\n        for (let i = 0; i < req.length; i++) {\n            this.value[i] = req[i]\n        }\n        this.props.operation(this.value.join(\"\"), this.props.boxes)\n    };\n\n    componentDidMount() {\n        this.elements[0].focus();\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.value.map((item, index) => (\n                        <Minput\n                            maxLength='1'\n                            onPaste={this.handlePaste}\n                            ref={(elem) => this.elements[index] = elem}\n                            onChange={(e) => this.handleInput(e, index)}\n                            onKeyDown={(e) => this.deleteInput(e, index)}\n                            key={index}\n                            value={this.value[index]}\n                        />\n                    ))\n                }\n            </div>\n        )\n    }\n}\n\n\nInputBox.propTypes = {\n    boxes: PropTypes.number.isRequired,\n};"]},"metadata":{},"sourceType":"module"}