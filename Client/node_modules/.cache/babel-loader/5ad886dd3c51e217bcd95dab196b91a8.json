{"ast":null,"code":"import { CART_ITEMS, GET_RESTAURANTS, SELECT_RESTAURANT, ADD_CART_RESTAURANT } from './actionTypes';\nimport { loadData, saveData } from '../LocalStorage';\nconst initState = {\n  isLoading: false,\n  restaurantData: loadData('restaurantData') || [],\n  restaurantItems: loadData('restaurantItems') || [],\n  cartItems: loadData('cartItems') || [],\n  isError: false,\n  restaurantName: loadData('restaurantName') || '',\n  restaurantId: loadData('restaurantId') || '',\n  cartRestaurant: loadData('cartRestaurant') || '',\n  cartRestaurantId: loadData('cartRestaurantId') || '',\n  totalCartValue: loadData('totalCartValue') || 0,\n  totalCartItems: loadData('totalCartItems') || 0\n};\n\nconst reducer = (state = initState, {\n  type,\n  payload\n}) => {\n  // console.log(type, payload);\n  switch (type) {\n    case GET_RESTAURANTS.REQUEST:\n      {\n        return { ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n\n    case GET_RESTAURANTS.SUCCESS:\n      {\n        saveData('restaurantData', payload);\n        return { ...state,\n          restaurantData: payload,\n          isLoading: false\n        };\n      }\n\n    case GET_RESTAURANTS.FAILURE:\n      {\n        return { ...state,\n          isError: true,\n          isLoading: false\n        };\n      }\n\n    case SELECT_RESTAURANT:\n      {\n        let seletedRestaurant = state.restaurantData.filter(item => item._id === payload._id)[0];\n\n        for (let i = 0; i < seletedRestaurant.foodItems.length; i++) {\n          for (let j = 0; j < state.cartItems.length; j++) {\n            if (seletedRestaurant.foodItems[i]._id === state.cartItems[j]._id) {\n              seletedRestaurant.foodItems[i].quantity = state.cartItems[j].quantity;\n            }\n          }\n        }\n\n        saveData('restaurantId', seletedRestaurant._id);\n        saveData('restaurantName', seletedRestaurant.restaurentName);\n        saveData('restaurantItems', seletedRestaurant.foodItems);\n        return { ...state,\n          restaurantId: seletedRestaurant._id,\n          restaurantName: seletedRestaurant.restaurentName,\n          restaurantItems: seletedRestaurant.foodItems\n        };\n      }\n\n    case CART_ITEMS.ADD:\n      {\n        let addedItems = state.cartItems.find(item => item._id === payload._id); // let restaurantItem = state.restaurantItems.find(item=> item._id === payload._id)\n\n        if (addedItems) {\n          addedItems.quantity += 1;\n          saveData('totalCartValue', state.totalCartValue + addedItems.itemPrice);\n          saveData('totalCartItems', state.totalCartItems + 1);\n          saveData('cartRestaurantId', state.restaurantId);\n          saveData('cartRestaurant', state.restaurantName);\n          saveData('cartItems', state.cartItems);\n          saveData('restaurantItems', state.restaurantItems);\n          return { ...state,\n            totalCartValue: state.totalCartValue + addedItems.itemPrice,\n            totalCartItems: state.totalCartItems + 1,\n            cartRestaurantId: state.restaurantId,\n            cartRestaurant: state.restaurantName,\n            cartItems: state.cartItems,\n            restaurantItems: state.restaurantItems\n          };\n        } else {\n          payload.quantity = 1;\n          saveData('totalCartValue', state.totalCartValue + payload.itemPrice);\n          saveData('totalCartItems', state.totalCartItems + payload.quantity);\n          saveData('cartItems', [...state.cartItems, payload]);\n          saveData('restaurantItems', state.restaurantItems);\n          return { ...state,\n            totalCartItems: state.totalCartItems + payload.quantity,\n            totalCartValue: state.totalCartValue + payload.itemPrice,\n            cartItems: [...state.cartItems, payload],\n            restaurantItems: state.restaurantItems\n          };\n        }\n      }\n\n    case CART_ITEMS.REMOVE:\n      {\n        let removeItems = state.cartItems.find(item => item._id === payload);\n        let restaurantItem = state.restaurantItems.find(item => item._id === payload);\n\n        if (removeItems) {\n          if (removeItems.quantity === 1) {\n            let newItems = state.cartItems.filter(item => item._id !== payload);\n            restaurantItem.quantity = 0;\n            saveData('totalCartValue', state.totalCartValue - removeItems.itemPrice);\n            saveData('totalCartItems', state.totalCartItems - 1);\n            saveData('cartItems', newItems);\n            saveData('restaurantItems', state.restaurantItems);\n            return { ...state,\n              totalCartValue: state.totalCartValue - removeItems.itemPrice,\n              totalCartItems: state.totalCartItems - 1,\n              cartItems: newItems,\n              restaurantItems: state.restaurantItems\n            };\n          } else {\n            removeItems.quantity -= 1;\n            saveData('totalCartValue', state.totalCartValue - removeItems.itemPrice);\n            saveData('totalCartItems', state.totalCartItems - 1);\n            saveData('cartItems', state.cartItems);\n            saveData('restaurantItems', state.restaurantItems);\n            return { ...state,\n              totalCartValue: state.totalCartValue - removeItems.itemPrice,\n              totalCartItems: state.totalCartItems - 1,\n              cartItems: state.cartItems,\n              restaurantItems: state.restaurantItems\n            };\n          }\n        }\n      }\n\n    case ADD_CART_RESTAURANT:\n      {\n        saveData('cartRestaurantId', payload.id);\n        saveData('cartRestaurant', payload.name);\n        return { ...state,\n          cartRestaurant: payload.name,\n          cartRestaurantId: payload.id\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/madhu/Documents/DoneGo/Client/src/Redux/Restaurant/reducer.js"],"names":["CART_ITEMS","GET_RESTAURANTS","SELECT_RESTAURANT","ADD_CART_RESTAURANT","loadData","saveData","initState","isLoading","restaurantData","restaurantItems","cartItems","isError","restaurantName","restaurantId","cartRestaurant","cartRestaurantId","totalCartValue","totalCartItems","reducer","state","type","payload","REQUEST","SUCCESS","FAILURE","seletedRestaurant","filter","item","_id","i","foodItems","length","j","quantity","restaurentName","ADD","addedItems","find","itemPrice","REMOVE","removeItems","restaurantItem","newItems","id","name"],"mappings":"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","sourcesContent":["import { CART_ITEMS, GET_RESTAURANTS, SELECT_RESTAURANT, ADD_CART_RESTAURANT } from './actionTypes'\nimport { loadData, saveData } from '../LocalStorage'\n\nconst initState = {\n  isLoading: false,\n  restaurantData: loadData('restaurantData') || [] ,\n  restaurantItems: loadData('restaurantItems') || [],\n  cartItems: loadData('cartItems') || [],\n  isError: false,\n  restaurantName: loadData('restaurantName') || '',\n  restaurantId: loadData('restaurantId') || '',\n  cartRestaurant: loadData('cartRestaurant') || '',\n  cartRestaurantId: loadData('cartRestaurantId') || '',\n  totalCartValue: loadData('totalCartValue') || 0,\n  totalCartItems: loadData('totalCartItems') || 0\n}\n\n\nconst reducer = (state = initState, { type, payload }) => {\n  // console.log(type, payload);\n  switch (type) {\n    case GET_RESTAURANTS.REQUEST:{\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    }\n\n    case GET_RESTAURANTS.SUCCESS:{\n      saveData('restaurantData', payload)\n      return {\n        ...state,\n        restaurantData: payload,\n        isLoading: false\n      };\n    }\n\n    case GET_RESTAURANTS.FAILURE:{\n      return {\n        ...state,\n        isError: true,\n        isLoading: false\n      };\n    }\n\n    case SELECT_RESTAURANT: {\n      let seletedRestaurant = state.restaurantData.filter(item => item._id === payload._id)[0]\n      for(let i = 0; i < seletedRestaurant.foodItems.length; i++){\n        for(let j = 0; j < state.cartItems.length; j++){\n          if(seletedRestaurant.foodItems[i]._id === state.cartItems[j]._id){\n            seletedRestaurant.foodItems[i].quantity = state.cartItems[j].quantity\n          }\n        }\n      }\n      saveData('restaurantId', seletedRestaurant._id)\n      saveData('restaurantName', seletedRestaurant.restaurentName)\n      saveData('restaurantItems', seletedRestaurant.foodItems)\n      return{\n        ...state,\n        restaurantId: seletedRestaurant._id,\n        restaurantName: seletedRestaurant.restaurentName,\n        restaurantItems: seletedRestaurant.foodItems\n      }\n    }\n\n    case CART_ITEMS.ADD: {\n        let addedItems = state.cartItems.find(item => item._id === payload._id)\n        // let restaurantItem = state.restaurantItems.find(item=> item._id === payload._id)\n        if(addedItems){\n          addedItems.quantity += 1\n          saveData('totalCartValue', state.totalCartValue + addedItems.itemPrice)\n          saveData('totalCartItems', state.totalCartItems + 1)\n          saveData('cartRestaurantId', state.restaurantId)\n          saveData('cartRestaurant', state.restaurantName)\n          saveData('cartItems', state.cartItems)\n          saveData('restaurantItems', state.restaurantItems)\n          return {\n            ...state,\n            totalCartValue: state.totalCartValue + addedItems.itemPrice,\n            totalCartItems: state.totalCartItems + 1,\n            cartRestaurantId: state.restaurantId,\n            cartRestaurant: state.restaurantName,\n            cartItems: state.cartItems,\n            restaurantItems: state.restaurantItems\n          }\n        }\n        else{\n          payload.quantity = 1\n          saveData('totalCartValue', state.totalCartValue + payload.itemPrice)\n          saveData('totalCartItems', state.totalCartItems + payload.quantity)\n          saveData('cartItems', [...state.cartItems, payload])\n          saveData('restaurantItems', state.restaurantItems)\n          return {\n            ...state,\n            totalCartItems: state.totalCartItems + payload.quantity,\n            totalCartValue: state.totalCartValue + payload.itemPrice,\n            cartItems: [...state.cartItems, payload],\n            restaurantItems: state.restaurantItems\n          }\n        }\n    }\n\n    case CART_ITEMS.REMOVE: {\n      let removeItems = state.cartItems.find(item => item._id === payload)\n      let restaurantItem = state.restaurantItems.find(item=> item._id === payload)\n\n      if(removeItems){\n        if(removeItems.quantity === 1){\n          let newItems = state.cartItems.filter(item => item._id !== payload)\n          restaurantItem.quantity = 0\n\n          saveData('totalCartValue', state.totalCartValue - removeItems.itemPrice)\n          saveData('totalCartItems', state.totalCartItems - 1)\n          saveData('cartItems', newItems)\n          saveData('restaurantItems', state.restaurantItems)\n\n          return {\n            ...state,\n            totalCartValue: state.totalCartValue - removeItems.itemPrice,\n            totalCartItems: state.totalCartItems - 1,\n            cartItems: newItems,\n            restaurantItems: state.restaurantItems\n          }\n        }\n        else{\n          removeItems.quantity -= 1\n\n          saveData('totalCartValue', state.totalCartValue - removeItems.itemPrice)\n          saveData('totalCartItems', state.totalCartItems - 1)\n          saveData('cartItems', state.cartItems)\n          saveData('restaurantItems', state.restaurantItems)\n\n          return {\n            ...state,\n            totalCartValue: state.totalCartValue - removeItems.itemPrice,\n            totalCartItems: state.totalCartItems - 1,\n            cartItems: state.cartItems,\n            restaurantItems: state.restaurantItems\n          }\n        }\n      }\n  }\n  case ADD_CART_RESTAURANT: {\n    saveData('cartRestaurantId', payload.id)\n    saveData('cartRestaurant', payload.name)\n    return {\n      ...state,\n      cartRestaurant: payload.name,\n      cartRestaurantId: payload.id,\n    }\n  }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}