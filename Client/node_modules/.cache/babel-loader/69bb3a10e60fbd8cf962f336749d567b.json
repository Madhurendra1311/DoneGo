{"ast":null,"code":"import { CART_ITEMS, GET_RESTAURANTS, SELECT_RESTAURANT, ADD_CART_RESTAURANT } from './actionTypes';\nimport { loadData, saveData } from '../LocalStorage';\nconst initState = {\n  isLoading: false,\n  restaurantData: loadData('restaurantData') || [],\n  restaurantItems: loadData('restaurantItems') || [],\n  cartItems: loadData('cartItems') || [],\n  isError: false,\n  restaurantName: loadData('restaurantName') || '',\n  restaurentImage: loadData('restaurentImage') || '',\n  restaurentDelivery: loadData('restaurentDelivery') || '',\n  restaurantId: loadData('restaurantId') || '',\n  cartRestaurant: loadData('cartRestaurant') || '',\n  cartRestaurantId: loadData('cartRestaurantId') || '',\n  totalCartValue: loadData('totalCartValue') || 0,\n  totalCartItems: loadData('totalCartItems') || 0\n};\n\nconst reducer = (state = initState, {\n  type,\n  payload\n}) => {\n  // console.log(type, payload);\n  switch (type) {\n    case GET_RESTAURANTS.REQUEST:\n      {\n        return { ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n\n    case GET_RESTAURANTS.SUCCESS:\n      {\n        saveData('restaurantData', payload);\n        return { ...state,\n          restaurantData: payload,\n          isLoading: false\n        };\n      }\n\n    case GET_RESTAURANTS.FAILURE:\n      {\n        return { ...state,\n          isError: true,\n          isLoading: false\n        };\n      }\n\n    case SELECT_RESTAURANT:\n      {\n        let seletedRestaurant = state.restaurantData.filter(item => item._id === payload._id)[0];\n\n        for (let i = 0; i < seletedRestaurant.foodItems.length; i++) {\n          for (let j = 0; j < state.cartItems.length; j++) {\n            if (seletedRestaurant.foodItems[i]._id === state.cartItems[j]._id) {\n              seletedRestaurant.foodItems[i].quantity = state.cartItems[j].quantity;\n            }\n          }\n        }\n\n        saveData('restaurantId', seletedRestaurant._id);\n        saveData('restaurantName', seletedRestaurant.restaurentName);\n        saveData('restaurantItems', seletedRestaurant.foodItems);\n        saveData('restaurentImage', seletedRestaurant.avatar);\n        saveData('restaurentDelivery', seletedRestaurant.deliveryTime);\n        return { ...state,\n          restaurantId: seletedRestaurant._id,\n          restaurantName: seletedRestaurant.restaurentName,\n          restaurantItems: seletedRestaurant.foodItems,\n          restaurentImage: seletedRestaurant.avatar,\n          restaurentDelivery: seletedRestaurant.deliveryTime\n        };\n      }\n\n    case CART_ITEMS.ADD:\n      {\n        let addedItems = state.cartItems.find(item => item._id === payload._id); // let restaurantItem = state.restaurantItems.find(item=> item._id === payload._id)\n\n        if (addedItems) {\n          addedItems.quantity += 1;\n          saveData('totalCartValue', state.totalCartValue + addedItems.itemPrice);\n          saveData('totalCartItems', state.totalCartItems + 1);\n          saveData('cartRestaurantId', state.restaurantId);\n          saveData('cartRestaurant', state.restaurantName);\n          saveData('cartItems', state.cartItems);\n          saveData('restaurantItems', state.restaurantItems);\n          return { ...state,\n            totalCartValue: state.totalCartValue + addedItems.itemPrice,\n            totalCartItems: state.totalCartItems + 1,\n            cartRestaurantId: state.restaurantId,\n            cartRestaurant: state.restaurantName,\n            cartItems: state.cartItems,\n            restaurantItems: state.restaurantItems\n          };\n        } else {\n          payload.quantity = 1;\n          saveData('totalCartValue', state.totalCartValue + payload.itemPrice);\n          saveData('totalCartItems', state.totalCartItems + payload.quantity);\n          saveData('cartItems', [...state.cartItems, payload]);\n          saveData('restaurantItems', state.restaurantItems);\n          return { ...state,\n            totalCartItems: state.totalCartItems + payload.quantity,\n            totalCartValue: state.totalCartValue + payload.itemPrice,\n            cartItems: [...state.cartItems, payload],\n            restaurantItems: state.restaurantItems\n          };\n        }\n      }\n\n    case CART_ITEMS.REMOVE:\n      {\n        let removeItems = state.cartItems.find(item => item._id === payload);\n        let restaurantItem = state.restaurantItems.find(item => item._id === payload);\n\n        if (removeItems) {\n          if (removeItems.quantity === 1) {\n            let newItems = state.cartItems.filter(item => item._id !== payload);\n            restaurantItem.quantity = 0;\n            saveData('totalCartValue', state.totalCartValue - removeItems.itemPrice);\n            saveData('totalCartItems', state.totalCartItems - 1);\n            saveData('cartItems', newItems);\n            saveData('restaurantItems', state.restaurantItems);\n            saveData('cartRestaurantId', state.totalCartItems === 0 ? '' : state.restaurantId);\n            saveData('cartRestaurant', state.totalCartItems === 0 ? '' : state.restaurantName);\n            return { ...state,\n              totalCartValue: state.totalCartValue - removeItems.itemPrice,\n              totalCartItems: state.totalCartItems - 1,\n              cartItems: newItems,\n              restaurantItems: state.restaurantItems,\n              cartRestaurantId: state.totalCartItems === 0 ? '' : state.restaurantId,\n              cartRestaurant: state.totalCartItems === 0 ? '' : state.restaurantName\n            };\n          } else {\n            removeItems.quantity -= 1;\n            saveData('totalCartValue', state.totalCartValue - removeItems.itemPrice);\n            saveData('totalCartItems', state.totalCartItems - 1);\n            saveData('cartItems', state.cartItems);\n            saveData('restaurantItems', state.restaurantItems);\n            return { ...state,\n              totalCartValue: state.totalCartValue - removeItems.itemPrice,\n              totalCartItems: state.totalCartItems - 1,\n              cartItems: state.cartItems,\n              restaurantItems: state.restaurantItems\n            };\n          }\n        }\n      }\n\n    case CART_ITEMS.CLEAR:\n      {\n        return { ...state,\n          cartItems: [],\n          cartRestaurant: '',\n          cartRestaurantId: '',\n          totalCartValue: 0,\n          totalCartItems: 0\n        };\n      }\n\n    case ADD_CART_RESTAURANT:\n      {\n        saveData('cartRestaurantId', payload.id);\n        saveData('cartRestaurant', payload.name);\n        return { ...state,\n          cartRestaurant: payload.name,\n          cartRestaurantId: payload.id\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/madhu/Documents/DoneGo/Client/src/Redux/Restaurant/reducer.js"],"names":["CART_ITEMS","GET_RESTAURANTS","SELECT_RESTAURANT","ADD_CART_RESTAURANT","loadData","saveData","initState","isLoading","restaurantData","restaurantItems","cartItems","isError","restaurantName","restaurentImage","restaurentDelivery","restaurantId","cartRestaurant","cartRestaurantId","totalCartValue","totalCartItems","reducer","state","type","payload","REQUEST","SUCCESS","FAILURE","seletedRestaurant","filter","item","_id","i","foodItems","length","j","quantity","restaurentName","avatar","deliveryTime","ADD","addedItems","find","itemPrice","REMOVE","removeItems","restaurantItem","newItems","CLEAR","id","name"],"mappings":"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","sourcesContent":["import { CART_ITEMS, GET_RESTAURANTS, SELECT_RESTAURANT, ADD_CART_RESTAURANT } from './actionTypes'\nimport { loadData, saveData } from '../LocalStorage'\n\nconst initState = {\n  isLoading: false,\n  restaurantData: loadData('restaurantData') || [] ,\n  restaurantItems: loadData('restaurantItems') || [],\n  cartItems: loadData('cartItems') || [],\n  isError: false,\n  restaurantName: loadData('restaurantName') || '',\n  restaurentImage:  loadData('restaurentImage') || '',\n  restaurentDelivery:  loadData('restaurentDelivery') || '',\n  restaurantId: loadData('restaurantId') || '',\n  cartRestaurant: loadData('cartRestaurant') || '',\n  cartRestaurantId: loadData('cartRestaurantId') || '',\n  totalCartValue: loadData('totalCartValue') || 0,\n  totalCartItems: loadData('totalCartItems') || 0\n}\n\n\nconst reducer = (state = initState, { type, payload }) => {\n  // console.log(type, payload);\n  switch (type) {\n    case GET_RESTAURANTS.REQUEST:{\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    }\n\n    case GET_RESTAURANTS.SUCCESS:{\n      saveData('restaurantData', payload)\n      return {\n        ...state,\n        restaurantData: payload,\n        isLoading: false\n      };\n    }\n\n    case GET_RESTAURANTS.FAILURE:{\n      return {\n        ...state,\n        isError: true,\n        isLoading: false\n      };\n    }\n\n    case SELECT_RESTAURANT: {\n      let seletedRestaurant = state.restaurantData.filter(item => item._id === payload._id)[0]\n      for(let i = 0; i < seletedRestaurant.foodItems.length; i++){\n        for(let j = 0; j < state.cartItems.length; j++){\n          if(seletedRestaurant.foodItems[i]._id === state.cartItems[j]._id){\n            seletedRestaurant.foodItems[i].quantity = state.cartItems[j].quantity\n          }\n        }\n      }\n      saveData('restaurantId', seletedRestaurant._id)\n      saveData('restaurantName', seletedRestaurant.restaurentName)\n      saveData('restaurantItems', seletedRestaurant.foodItems)\n      saveData('restaurentImage', seletedRestaurant.avatar)\n      saveData('restaurentDelivery', seletedRestaurant.deliveryTime)\n      return{\n        ...state,\n        restaurantId: seletedRestaurant._id,\n        restaurantName: seletedRestaurant.restaurentName,\n        restaurantItems: seletedRestaurant.foodItems,\n        restaurentImage: seletedRestaurant.avatar,\n        restaurentDelivery:  seletedRestaurant.deliveryTime\n      }\n    }\n\n    case CART_ITEMS.ADD: {\n        let addedItems = state.cartItems.find(item => item._id === payload._id)\n        // let restaurantItem = state.restaurantItems.find(item=> item._id === payload._id)\n        if(addedItems){\n          addedItems.quantity += 1\n          saveData('totalCartValue', state.totalCartValue + addedItems.itemPrice)\n          saveData('totalCartItems', state.totalCartItems + 1)\n          saveData('cartRestaurantId', state.restaurantId)\n          saveData('cartRestaurant', state.restaurantName)\n          saveData('cartItems', state.cartItems)\n          saveData('restaurantItems', state.restaurantItems)\n          return {\n            ...state,\n            totalCartValue: state.totalCartValue + addedItems.itemPrice,\n            totalCartItems: state.totalCartItems + 1,\n            cartRestaurantId: state.restaurantId,\n            cartRestaurant: state.restaurantName,\n            cartItems: state.cartItems,\n            restaurantItems: state.restaurantItems\n          }\n        }\n        else{\n          payload.quantity = 1\n          saveData('totalCartValue', state.totalCartValue + payload.itemPrice)\n          saveData('totalCartItems', state.totalCartItems + payload.quantity)\n          saveData('cartItems', [...state.cartItems, payload])\n          saveData('restaurantItems', state.restaurantItems)\n          return {\n            ...state,\n            totalCartItems: state.totalCartItems + payload.quantity,\n            totalCartValue: state.totalCartValue + payload.itemPrice,\n            cartItems: [...state.cartItems, payload],\n            restaurantItems: state.restaurantItems\n          }\n        }\n    }\n\n    case CART_ITEMS.REMOVE: {\n      let removeItems = state.cartItems.find(item => item._id === payload)\n      let restaurantItem = state.restaurantItems.find(item=> item._id === payload)\n\n      if(removeItems){\n        if(removeItems.quantity === 1){\n          let newItems = state.cartItems.filter(item => item._id !== payload)\n          restaurantItem.quantity = 0\n\n          saveData('totalCartValue', state.totalCartValue - removeItems.itemPrice)\n          saveData('totalCartItems', state.totalCartItems - 1)\n          saveData('cartItems', newItems)\n          saveData('restaurantItems', state.restaurantItems)\n          saveData('cartRestaurantId', state.totalCartItems === 0 ? '': state.restaurantId)\n          saveData('cartRestaurant', state.totalCartItems === 0 ? '': state.restaurantName)\n\n          return {\n            ...state,\n            totalCartValue: state.totalCartValue - removeItems.itemPrice,\n            totalCartItems: state.totalCartItems - 1,\n            cartItems: newItems,\n            restaurantItems: state.restaurantItems,\n            cartRestaurantId: state.totalCartItems === 0 ? '': state.restaurantId,\n            cartRestaurant: state.totalCartItems === 0 ? '': state.restaurantName\n          }\n        }\n        else{\n          removeItems.quantity -= 1\n\n          saveData('totalCartValue', state.totalCartValue - removeItems.itemPrice)\n          saveData('totalCartItems', state.totalCartItems - 1)\n          saveData('cartItems', state.cartItems)\n          saveData('restaurantItems', state.restaurantItems)\n\n          return {\n            ...state,\n            totalCartValue: state.totalCartValue - removeItems.itemPrice,\n            totalCartItems: state.totalCartItems - 1,\n            cartItems: state.cartItems,\n            restaurantItems: state.restaurantItems\n          }\n        }\n      }\n  }\n  case CART_ITEMS.CLEAR:{\n    return{\n      ...state,\n      cartItems: [],\n      cartRestaurant: '',\n      cartRestaurantId: '',\n      totalCartValue: 0,\n      totalCartItems: 0\n    }\n  }\n  case ADD_CART_RESTAURANT: {\n    saveData('cartRestaurantId', payload.id)\n    saveData('cartRestaurant', payload.name)\n    return {\n      ...state,\n      cartRestaurant: payload.name,\n      cartRestaurantId: payload.id,\n    }\n  }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}